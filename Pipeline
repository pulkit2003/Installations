pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/username/your-repo.git'
        BRANCH = 'main'
        MAVEN_HOME = tool name: 'Maven 3', type: 'maven'
        WAR_FILE = 'target/your-app.war'
        ANSIBLE_PLAYBOOK = 'ansible/tomcat_deploy.yml'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Build & Package') {
            steps {
                withEnv(["PATH+MAVEN=${MAVEN_HOME}/bin"]) {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Run Tests') {
            steps {
                withEnv(["PATH+MAVEN=${MAVEN_HOME}/bin"]) {
                    sh 'mvn test'
                }
            }
        }

        stage('Install Tomcat using Ansible') {
            steps {
                ansiblePlaybook(
                    playbook: "${ANSIBLE_PLAYBOOK}",
                    inventory: 'ansible/inventory.ini',
                    extras: '-u ec2-user --private-key /path/to/key.pem'
                )
            }
        }

        stage('Deploy WAR to Tomcat') {
            steps {
                // Copy WAR to Tomcat webapps directory using Ansible
                ansiblePlaybook(
                    playbook: "${ANSIBLE_PLAYBOOK}",
                    inventory: 'ansible/inventory.ini',
                    extras: "-e war_file=${WORKSPACE}/${WAR_FILE} -u ec2-user --private-key /path/to/key.pem"
                )
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace'
            cleanWs()
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
